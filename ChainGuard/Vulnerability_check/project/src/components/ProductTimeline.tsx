import React from 'react';
import {
  Package,
  Truck,
  Navigation,
  CheckCircle,
  Clock,
} from 'lucide-react';
import type { ProductTracker, ShipmentStatus } from '../types';

interface TimelineProps {
  product: ProductTracker;
}

export const ProductTimeline: React.FC<TimelineProps> = ({ product }) => {
  const steps: { status: ShipmentStatus; icon: React.ReactNode; label: string }[] =
    [
      { status: 'CREATED', icon: <Package />, label: 'Created' },
      { status: 'SHIPPED', icon: <Truck />, label: 'Shipped' },
      { status: 'IN_TRANSIT', icon: <Navigation />, label: 'In Transit' },
      { status: 'DELIVERED', icon: <CheckCircle />, label: 'Delivered' },
    ];

  const getCurrentStep = () => {
    return steps.findIndex((step) => step.status === product.status);
  };

  return (
    <div className="py-6">
      <div className="relative">
        <div className="absolute inset-0 flex items-center">
          <div className="h-0.5 w-full bg-gray-200"></div>
        </div>
        <div className="relative flex justify-between">
          {steps.map((step, index) => {
            const currentStep = getCurrentStep();
            const isCompleted = index <= currentStep;
            const isCurrent = index === currentStep;

            return (
              <div key={step.status} className="flex flex-col items-center">
                <div
                  className={`w-8 h-8 rounded-full flex items-center justify-center relative bg-white border-2 ${
                    isCompleted
                      ? 'border-blue-600 text-blue-600'
                      : 'border-gray-300 text-gray-300'
                  }`}
                >
                  {isCurrent && (
                    <Clock className="w-4 h-4 absolute animate-spin" />
                  )}
                  <div className={isCurrent ? 'opacity-0' : ''}>
                    {React.cloneElement(step.icon as React.ReactElement, {
                      className: 'w-4 h-4',
                    })}
                  </div>
                </div>
                <div className="mt-2 text-sm font-medium text-gray-900">
                  {step.label}
                </div>
                {isCurrent && (
                  <div className="mt-1 text-xs text-gray-500">
                    {new Date(product.timestamp).toLocaleString()}
                  </div>
                )}
              </div>
            );
          })}
        </div>
      </div>
    </div>
  );
};