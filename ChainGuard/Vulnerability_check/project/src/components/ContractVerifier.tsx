import React, { useState } from 'react';
import { QrCode, CheckCircle, XCircle } from 'lucide-react';

interface VerifierProps {
  originalHash: string;
}

export const ContractVerifier: React.FC<VerifierProps> = ({ originalHash }) => {
  const [inputHash, setInputHash] = useState('');
  const [verificationResult, setVerificationResult] = useState<
    'VERIFIED' | 'MISMATCH' | null
  >(null);

  const verifyHash = () => {
    setVerificationResult(inputHash === originalHash ? 'VERIFIED' : 'MISMATCH');
  };

  return (
    <div className="bg-white rounded-lg shadow-md p-6">
      <div className="flex items-center gap-2 mb-4">
        <QrCode className="w-6 h-6 text-gray-700" />
        <h2 className="text-xl font-semibold">Contract Verification</h2>
      </div>

      <div className="space-y-4">
        <div>
          <label
            htmlFor="hash-input"
            className="block text-sm font-medium text-gray-700"
          >
            Enter Contract Hash
          </label>
          <div className="mt-1">
            <input
              type="text"
              id="hash-input"
              className="shadow-sm focus:ring-blue-500 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md"
              value={inputHash}
              onChange={(e) => setInputHash(e.target.value)}
              placeholder="Enter or scan contract hash..."
            />
          </div>
        </div>

        <button
          onClick={verifyHash}
          className="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2"
        >
          Verify Contract
        </button>

        {verificationResult && (
          <div
            className={`mt-4 p-4 rounded-md ${
              verificationResult === 'VERIFIED'
                ? 'bg-green-50'
                : 'bg-red-50'
            }`}
          >
            <div className="flex items-center">
              {verificationResult === 'VERIFIED' ? (
                <CheckCircle className="w-5 h-5 text-green-400" />
              ) : (
                <XCircle className="w-5 h-5 text-red-400" />
              )}
              <p
                className={`ml-3 text-sm font-medium ${
                  verificationResult === 'VERIFIED'
                    ? 'text-green-800'
                    : 'text-red-800'
                }`}
              >
                {verificationResult === 'VERIFIED'
                  ? 'Contract Verified Successfully'
                  : 'Contract Verification Failed - Hash Mismatch'}
              </p>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};